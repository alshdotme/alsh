---
import IconLink from './IconLink.astro'
import TextLink from './TextLink.astro'
export interface Props {
  title?: string
}

const { title = 'Alsh // Web' } = Astro.props as Props
---

<!doctype html>
<html lang="en" class="scroll-smooth antialiased">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <title>{title}</title>
  </head>
  <body class="relative font-sans leading-[1.75] text-zinc-5 bg-black lg:text-lg">
    <div class="grid lg:max-w-70ch m-auto">
      <slot />
    </div>
    <div class="fixed inset-0 w-100dvw mouse-gradient -z-1"></div>
    <footer
      class="lg:max-w-70ch m-auto border-t border-solid border-zinc-5 mt-16 mb-6 lg:flex lg:flex-row-reverse lg:gap-x-16 lg:py-4 justify-between items-center">
      <p class="text-xs">
        Built With <TextLink to="https://www.astro.build">Astro</TextLink> and <TextLink to="https://www.unocss.dev">UnoCSS</TextLink>. Coded in
        <TextLink to="https://code.visualstudio.com/">Visual Studio Code</TextLink>. Hosted on <TextLink to="https://vercel.com">Vercel</TextLink> at
        the edge. All text is the <TextLink to="https://fonts.google.com/specimen/Inter">Inter typeface</TextLink>.
      </p>
      <ul class="flex space-x-5 justify-self-end">
        <IconLink title="X.com" url="https://x.com/alshdotme" icon="i-fa6-brands-x-twitter" />
        <IconLink title="LinkedIn" url="https://www.linkedin.com/in/alsh" icon="i-fa6-brands-linkedin" />
        <IconLink title="GitHub" url="https://github.com/alshdotme" icon="i-fa6-brands-github" />
        <IconLink title="Instagram" url="https://www.instagram.com/alstrhrd/" icon="i-fa6-brands-instagram" />
      </ul>
    </footer>
  </body>
</html>

<script>
  const mouseGradientContainer = document.querySelector<HTMLDivElement>('.mouse-gradient')
  const setMousePosition = (pos: { clientX: number; clientY: number }) => {
    if (window.innerWidth < 1024) return

    const x = Math.round((pos.clientX / window.innerWidth) * 100)
    const y = Math.round((pos.clientY / window.innerHeight) * 100)

    mouseGradientContainer?.style.setProperty('--mouse-x', `${x}%`)
    mouseGradientContainer?.style.setProperty('--mouse-y', `${y}%`)
  }

  document.addEventListener('pointermove', setMousePosition)
</script>
<script>
  window.va =
    window.va ||
    function () {
      // @ts-expect-error
      ;(window.vaq = window.vaq || []).push(arguments)
    }
</script>
<script defer src="/_vercel/insights/script.js"></script>
